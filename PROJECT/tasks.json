{
  "lastSync": "2025-10-01T17:43:52Z",
  "head": {
    "branch": "main",
    "sha": "5bee973"
  },
  "tasks": [
    {
      "id": "t-001",
      "title": "Wire provider home screen to store + navigation",
      "status": "planned",
      "priority": "P0",
      "area": "provider",
      "owner": "TBA",
      "routes": [
        "/(provider)/home",
        "/(provider)/invite/[id]",
        "/(provider)/job/[id]"
      ],
      "files": ["app/(provider)/home.tsx", "lib/provider/store.ts"],
      "testIDs": [
        "prov.home.toggle",
        "prov.invite.card-<id>",
        "prov.invite.view-<id>"
      ],
      "acceptance": [
        "`/(provider)/home` uses `useProviderState` to hydrate profile, invites, and active job so toggling `prov.home.toggle` calls `toggleOnline`.",
        "Invite tap routes push to `/(provider)/invite/<id>` and active job tap replaces to `/(provider)/job/<activeId>` without throwing.",
        "Null store values render empty states while countdowns continue via utils/time.getTimeRemaining."
      ],
      "evidence": null,
      "notes": "High-priority fix; screen currently throws when Switch fires."
    },
    {
      "id": "t-002",
      "title": "Persist provider profile + availability to storage",
      "status": "planned",
      "priority": "P1",
      "area": "core",
      "owner": "TBA",
      "routes": ["/(provider)/home", "/(provider)/profile", "/"],
      "files": [
        "lib/provider/mock.ts",
        "lib/provider/store.ts",
        "app/index.tsx"
      ],
      "testIDs": ["prov.profile.name", "prov.profile.toggle", "loading-screen"],
      "acceptance": [
        "`useProviderProfile` hydrates from AsyncStorage and persists after toggling `prov.profile.toggle`.",
        "App entry checks storied state so `loading-screen` redirects to `/(provider)/home` when a cached provider exists.",
        "Saved profile fields repopulate `prov.profile.name` and `prov.profile.phone` after reloads."
      ],
      "evidence": null,
      "notes": "Depends on AsyncStorage availability; include migration guard for empty cache."
    },
    {
      "id": "t-003",
      "title": "Add provider store tests for invites + completion guards",
      "status": "planned",
      "priority": "P1",
      "area": "testing",
      "owner": "TBA",
      "routes": ["/(provider)/invite/[id]", "/(provider)/job/[id]"],
      "files": [
        "lib/provider/mock.ts",
        "lib/provider/store.ts",
        "__tests__/providerStore.spec.ts"
      ],
      "testIDs": [
        "prov.invite.accept",
        "prov.job.complete",
        "prov.complete.finish"
      ],
      "acceptance": [
        "Unit tests cover acceptInvite returning null when activeJob already set and decline removing invites.",
        "TTL countdown spec asserts `getRemainingTTL` and invite subscriptions mirror `countdown-<id>` UX.",
        "Completing a job pushes earnings and clears active job, matching CTA flow expectations."
      ],
      "evidence": null,
      "notes": "Model tests after existing AppButton suite using jest-expo preset."
    },
    {
      "id": "t-004",
      "title": "Design QA + instrumentation for provider earnings CTA",
      "status": "planned",
      "priority": "P2",
      "area": "ui",
      "owner": "TBA",
      "routes": ["/(provider)/earnings"],
      "files": ["app/(provider)/earnings.tsx", "components/ui/MetricTile.tsx"],
      "testIDs": ["prov.earnings.continue"],
      "acceptance": [
        "Primary CTA exposes prov.earnings.continue and respects >=44dp touch target.",
        "Spacing tokens (component/section) documented and applied on earnings cards/metrics.",
        "Empty state copy and color contrast audited with tokens recorded in TASKS.md notes."
      ],
      "evidence": null,
      "notes": "Coordinate with design tokens to avoid drifting from tailwind spacing scale."
    },
    {
      "id": "t-005",
      "title": "Analytics skeleton for provider flows",
      "status": "planned",
      "priority": "P3",
      "area": "core",
      "owner": "TBA",
      "routes": [
        "/(provider)/home",
        "/(provider)/invite/[id]",
        "/(provider)/job/[id]",
        "/(provider)/complete/[id]"
      ],
      "files": [
        "utils/analytics.ts",
        "app/(provider)/home.tsx",
        "app/(provider)/invite/[id].tsx",
        "app/(provider)/job/[id].tsx",
        "app/(provider)/complete/[id].tsx"
      ],
      "testIDs": [
        "prov.home.toggle",
        "prov.invite.accept",
        "prov.job.startWork",
        "prov.complete.finish"
      ],
      "acceptance": [
        "Introduce logInteraction helper with no-op transport stub and docs in DECISIONS.md.",
        "Provider screens call logInteraction with route + elementId for primary actions.",
        "Helper exports mocked implementation for Jest to keep tests deterministic.",
        "2025-10-01 / 5bee973: logInteraction wired for prov.home.toggle and prov.complete.finish."
      ],
      "evidence": null,
      "notes": "Optional to wire to console.log for now; ensure future batching is possible."
    },
    {
      "id": "t-006",
      "title": "Provider tab shell (Home/Earnings/Profile)",
      "status": "done",
      "priority": "P1",
      "area": "provider",
      "owner": "TBA",
      "routes": [
        "/(provider)/home",
        "/(provider)/earnings",
        "/(provider)/profile"
      ],
      "files": ["app/(provider)/_layout.tsx", "components/nav/FlatTabBar.tsx"],
      "testIDs": ["prov.tabs.home", "prov.tabs.earnings", "prov.tabs.profile"],
      "acceptance": [
        "FlatTabBar renders provider tabs with safe-area padding and active styling.",
        "Hidden stack routes stay out of the tab strip while tabs persist across navigation."
      ],
      "evidence": {
        "commits": ["b08f6b8"],
        "screens": []
      },
      "notes": "Tabs fallback logic also handles public flows for now."
    },
    {
      "id": "t-007",
      "title": "Invite TTL with countdown + expiry UX",
      "status": "done",
      "priority": "P1",
      "area": "provider",
      "owner": "TBA",
      "routes": ["/(provider)/home", "/(provider)/invite/[id]"],
      "files": [
        "components/ui/Countdown.tsx",
        "app/(provider)/invite/[id].tsx",
        "lib/provider/mock.ts"
      ],
      "testIDs": [
        "countdown-<id>",
        "prov.invite.expired",
        "prov.invite.accept"
      ],
      "acceptance": [
        "Countdown badge decrements per second and fires expiry handler.",
        "Expired invites render dedicated state and remove from home list."
      ],
      "evidence": {
        "commits": ["b08f6b8"],
        "screens": []
      },
      "notes": "Mock store prunes stale invites via tickInviteCountdowns."
    },
    {
      "id": "t-008",
      "title": "Single active job guard + exact address reveal",
      "status": "done",
      "priority": "P1",
      "area": "provider",
      "owner": "TBA",
      "routes": ["/(provider)/invite/[id]", "/(provider)/job/[id]"],
      "files": [
        "lib/provider/mock.ts",
        "app/(provider)/invite/[id].tsx",
        "app/(provider)/job/[id].tsx"
      ],
      "testIDs": ["prov.invite.accept", "prov.job.startDrive"],
      "acceptance": [
        "acceptInvite returns null when activeJob exists and UI shows blocking banner.",
        "Exact address only shown on job screen after acceptance."
      ],
      "evidence": {
        "commits": ["b08f6b8"],
        "screens": []
      },
      "notes": "Invite banner warns about single job capacity."
    },
    {
      "id": "t-009",
      "title": "Cash confirmation gating on completion",
      "status": "done",
      "priority": "P1",
      "area": "provider",
      "owner": "TBA",
      "routes": ["/(provider)/complete/[id]", "/(provider)/earnings"],
      "files": ["app/(provider)/complete/[id].tsx", "lib/provider/mock.ts"],
      "testIDs": ["prov.complete.cash", "prov.complete.finish"],
      "acceptance": [
        "Finish CTA disabled until cash toggle is true.",
        "Complete job pushes earning and navigates to earnings summary."
      ],
      "evidence": {
        "commits": ["b08f6b8"],
        "screens": []
      },
      "notes": "NoticeBanner reinforces cash-only policy."
    },
    {
      "id": "t-010",
      "title": "Provider onboarding form with keyboard avoidance",
      "status": "done",
      "priority": "P2",
      "area": "provider",
      "owner": "TBA",
      "routes": ["/(provider)/onboarding"],
      "files": ["app/(provider)/onboarding.tsx"],
      "testIDs": ["prov.onb.name", "prov.onb.phone", "prov.onb.submit"],
      "acceptance": [
        "KeyboardAvoidingView prevents input overlap on iOS/Android.",
        "Inline validation updates name/phone errors with dedicated testIDs."
      ],
      "evidence": {
        "commits": ["b08f6b8"],
        "screens": []
      },
      "notes": "Form autofocuses name field for faster onboarding."
    },
    {
      "id": "t-011",
      "title": "Cash notice primitive + adoption",
      "status": "in-progress",
      "priority": "P1",
      "area": "ui",
      "owner": "TBA",
      "routes": ["/(provider)/home", "/(provider)/earnings"],
      "files": [
        "components/ui/CashNotice.tsx",
        "app/(provider)/home.tsx",
        "app/(provider)/earnings.tsx"
      ],
      "testIDs": [
        "prov.home.cashNotice",
        "prov.earnings.cashNotice",
        "cash-notice.learn",
        "prov.earnings.continue"
      ],
      "acceptance": [
        "Cash reminder extracted to reusable primitive with consistent spacing and copy.",
        "Home and Earnings consume the primitive; Complete retains NoticeBanner.",
        "CTA touch targets stay \u226544dp; learn-more exposes cash-notice.learn testID."
      ],
      "evidence": {
        "commits": ["5bee973"]
      },
      "notes": "Unifies cash-only UX and testIDs; follows spacing tokens."
    },
    {
      "id": "t-020",
      "title": "Supabase project bootstrap",
      "status": "planned",
      "priority": "P1",
      "area": "backend",
      "owner": "TBA",
      "routes": ["/_dev/health"],
      "files": [
        "lib/supabase/client.ts",
        ".env.example",
        "app/_dev/health.tsx"
      ],
      "testIDs": [],
      "acceptance": [
        "Supabase client factory exists and reads keys from env",
        "Health screen confirms connectivity in dev",
        "Secrets not committed; example env updated"
      ],
      "evidence": null,
      "notes": "Feature-flag any live calls; default to mock when env missing"
    },
    {
      "id": "t-021",
      "title": "Auth (Supabase) \u2014 email OTP + session",
      "status": "planned",
      "priority": "P1",
      "area": "auth",
      "owner": "TBA",
      "routes": ["/(auth)/signin", "/(provider)/profile"],
      "files": [
        "lib/supabase/client.ts",
        "app/(auth)/*",
        "app/(provider)/profile.tsx"
      ],
      "testIDs": [
        "auth.email.input",
        "auth.signin.button",
        "auth.signout.button",
        "prov.profile.email"
      ],
      "acceptance": [
        "Sign in/up via email OTP; session restored on cold start",
        "Profile screen shows current email",
        "Falls back to onboarding if profile incomplete"
      ],
      "evidence": null,
      "notes": "Keep public routes for demo; guard provider routes when signed-out"
    },
    {
      "id": "t-022",
      "title": "Schema: providers, jobs, earnings",
      "status": "planned",
      "priority": "P1",
      "area": "db",
      "owner": "TBA",
      "routes": [],
      "files": ["supabase/migrations/*", "supabase/seed.sql", "README.md"],
      "testIDs": [],
      "acceptance": [
        "Migrations create providers/jobs/earnings tables",
        "Single active job constraint modeled",
        "Seed script populates demo data"
      ],
      "evidence": null,
      "notes": "Align columns to current mocks (price, status, timestamps)"
    },
    {
      "id": "t-023",
      "title": "RLS policies (cash-only + privacy)",
      "status": "planned",
      "priority": "P0",
      "area": "security",
      "owner": "TBA",
      "routes": [],
      "files": ["supabase/policies/*.sql", "README.md"],
      "testIDs": [],
      "acceptance": [
        "RLS enabled on jobs/earnings",
        "Approx address pre-accept; exact address post-accept only",
        "Manual/SQL tests documented"
      ],
      "evidence": null,
      "notes": "Security-critical before any live demo with real data"
    },
    {
      "id": "t-024",
      "title": "Realtime invites stream",
      "status": "planned",
      "priority": "P2",
      "area": "backend",
      "owner": "TBA",
      "routes": ["/(provider)/home", "/(provider)/invite/[id]"],
      "files": ["lib/provider/store.ts", "lib/supabase/realtime.ts"],
      "testIDs": ["countdown-<id>", "prov.invite.accept"],
      "acceptance": [
        "Subscribe to invites channel; TTL handled on client",
        "Feature flag toggles mock/live",
        "No change to existing testIDs"
      ],
      "evidence": null,
      "notes": "Keep countdown cadence at 1s; avoid jitter"
    },
    {
      "id": "t-025",
      "title": "Cash completion write-back",
      "status": "planned",
      "priority": "P1",
      "area": "backend",
      "owner": "TBA",
      "routes": ["/(provider)/complete/[id]", "/(provider)/earnings"],
      "files": ["lib/supabase/jobs.ts", "app/(provider)/complete/[id].tsx"],
      "testIDs": ["prov.complete.cash", "prov.complete.finish"],
      "acceptance": [
        "Finish persists job completion + earning row",
        "Graceful error toast; retry supported"
      ],
      "evidence": null,
      "notes": "Respect single active job rule"
    },
    {
      "id": "t-026",
      "title": "Edge function: idle auto-assign log",
      "status": "planned",
      "priority": "P3",
      "area": "backend",
      "owner": "TBA",
      "routes": ["/(provider)/home"],
      "files": ["supabase/functions/idle-log/*", "lib/telemetry/idle.ts"],
      "testIDs": [],
      "acceptance": [
        "Edge function receives log when idle \u226560s with pending invite",
        "No behavioral auto-assign (log only)"
      ],
      "evidence": null,
      "notes": "Aligns with guardrail; behavior deferred"
    },
    {
      "id": "t-027",
      "title": "Analytics transport swap",
      "status": "planned",
      "priority": "P3",
      "area": "analytics",
      "owner": "TBA",
      "routes": [],
      "files": ["utils/analytics.ts", "lib/supabase/analytics.ts"],
      "testIDs": [],
      "acceptance": [
        "Transport can batch + flush to Supabase",
        "Console remains in dev; tests mock transport"
      ],
      "evidence": null,
      "notes": "No vendor lock-in"
    },
    {
      "id": "t-028",
      "title": "CI env + secrets hygiene",
      "status": "planned",
      "priority": "P2",
      "area": "release",
      "owner": "TBA",
      "routes": [],
      "files": [
        ".env.example",
        ".github/PULL_REQUEST_TEMPLATE.md",
        "README.md"
      ],
      "testIDs": [],
      "acceptance": [
        "Example env covers all keys with comments",
        "PR template includes redaction/secrets checklist",
        "EAS/CI variables documented"
      ],
      "evidence": null,
      "notes": "Prevents secrets mishaps before backend rollout"
    },
    {
      "id": "t-017",
      "title": "Active Job timeline refactor",
      "status": "in-progress",
      "priority": "P1",
      "area": "provider",
      "owner": "@anouar.alh",
      "routes": ["/(provider)/job/[id]"],
      "files": [
        "app/(provider)/job/[id].tsx",
        "components/provider/JobTimeline.tsx"
      ],
      "testIDs": [
        "prov.job.step-assigned",
        "prov.job.step-onTheWay",
        "prov.job.step-working",
        "prov.job.step-completed",
        "prov.job.startDrive"
      ],
      "acceptance": [
        "Header shows single status chip",
        "Timeline renders 4 steps; states derived from current step",
        "No repeated status chips within list items",
        "StickyFooter CTA preserved and visible"
      ],
      "evidence": {
        "commits": []
      },
      "notes": "Visual tidy + reduced redundancy"
    },
    {
      "id": "t-015",
      "title": "InviteCard UX v2 (CTA bottom, hierarchy, tight stars)",
      "status": "in-progress",
      "priority": "P1",
      "area": "provider",
      "routes": ["/(provider)/home"],
      "files": ["components/provider/InviteCard.tsx"],
      "testIDs": [
        "prov.invite.card-<id>",
        "prov.invite.view-<id>",
        "countdown-<id>",
        "prov.invite.price-<id>",
        "prov.invite.eta-<id>"
      ],
      "acceptance": [
        "CTA at bottom; no truncation; >=44dp",
        "Chips cluster shows countdown + ETA side-by-side",
        "Stars row sits under name with compact spacing and numeric rating",
        "All info visible: name, price (MAD), countdown, ETA, rating, approx address"
      ],
      "evidence": {
        "commits": []
      },
      "notes": "Invite card layout refresh emphasizing CTA hierarchy and tight rating row",
      "owner": "@anouar.alh"
    },
    {
      "id": "t-030",
      "title": "Public order progress polish (timeline + provider card)",
      "status": "in-progress",
      "priority": "P1",
      "area": "public",
      "routes": ["/(public)/order/[id]"],
      "files": [
        "components/public/PublicJobTimeline.tsx",
        "components/public/ProviderInfoCard.tsx",
        "app/(public)/order/[id].tsx"
      ],
      "testIDs": [
        "pub.order.provider.name",
        "pub.order.provider.rating",
        "pub.order.eta",
        "pub.order.vehicle",
        "pub.order.plate",
        "pub.order.cashNotice",
        "pub.order.step-assigned",
        "pub.order.step-onTheWay",
        "pub.order.step-working",
        "pub.order.step-completed",
        "pub.order.markComplete"
      ],
      "acceptance": [
        "No duplicate chips in the list; header chip only",
        "Vertical timeline renders 4 steps with correct state",
        "Provider card shows ETA, rating (tight), vehicle + plate, and cash notice",
        "Footer CTA visible and not clipped"
      ],
      "evidence": {
        "commits": []
      },
      "notes": "Public flow mirrors provider polish; safe-area + spacing 16/20/24"
    },
    {
      "id": "t-031",
      "title": "Review Order polish (public checkout)",
      "status": "in-progress",
      "priority": "P1",
      "area": "public",
      "owner": "@anouar.alh",
      "routes": ["/(public)/checkout/review"],
      "files": [
        "components/public/ReviewSection.tsx",
        "components/public/PriceRow.tsx",
        "components/public/TotalPill.tsx",
        "app/(public)/checkout/review.tsx"
      ],
      "testIDs": [
        "pub.review.service.name",
        "pub.review.service.duration",
        "pub.review.service.price",
        "pub.review.addons.none",
        "pub.review.addons.chip-<slug>",
        "pub.review.details.address",
        "pub.review.details.time",
        "pub.review.details.notes",
        "pub.review.payment.cash",
        "pub.review.total",
        "pub.review.confirm"
      ],
      "acceptance": [
        "Section cards use consistent headers and dividers",
        "Prices right-aligned with MAD unit",
        "Add-ons render as chips or \u2018No add-ons selected\u2019",
        "Footer pill shows Total and duration; Confirm CTA accessible"
      ],
      "evidence": {
        "commits": []
      },
      "notes": "Matches investor-grade polish with minimal code surface"
    },
    {
      "id": "t-032",
      "title": "Wire Review Order to checkout store",
      "status": "done",
      "priority": "P1",
      "area": "public",
      "owner": "@anouar.alh",
      "routes": ["/(public)/price"],
      "files": ["lib/public/checkoutStore.ts", "app/(public)/price.tsx"],
      "testIDs": [
        "tid.public.price.section.service",
        "tid.public.price.section.addons",
        "tid.public.price.section.details",
        "tid.public.price.section.payment",
        "pub.review.service.name",
        "pub.review.service.duration",
        "pub.review.service.price",
        "tid.public.price.addon-chip-<id>",
        "pub.review.addons.none",
        "pub.review.details.address",
        "pub.review.details.time",
        "pub.review.details.vehicle",
        "pub.review.details.plate",
        "tid.public.price.total",
        "tid.public.price.confirm"
      ],
      "acceptance": [
        "Page renders from store state (service, addons, address, vehicle, time, payment) with fallback if store empty",
        "Total reflects service + addons via calcTotal; duration reflects service.durationMin",
        "Vehicle section shows make/model + plate when present",
        "All required testIDs present and functional"
      ],
      "evidence": {
        "commits": []
      }
    },
    {
      "id": "t-033",
      "title": "Orders tab (Active/Completed), receipt, and reset after confirm",
      "status": "done",
      "priority": "P1",
      "area": "public",
      "owner": "@anouar.alh",
      "routes": [
        "/(public)/orders",
        "/(public)/orders/[id]",
        "/(public)/confirm"
      ],
      "files": [
        "lib/public/ordersStore.ts",
        "app/(public)/orders.tsx",
        "app/(public)/orders/[id].tsx",
        "app/(public)/confirm.tsx",
        "app/(public)/_layout.tsx",
        "app/(public)/price.tsx"
      ],
      "testIDs": [
        "pub.tabs.orders",
        "pub.orders.active.section",
        "pub.orders.completed.section",
        "pub.orders.item-<id>",
        "pub.orders.resume-<id>",
        "pub.orders.receipt-<id>",
        "pub.orders.receipt.title",
        "pub.orders.receipt.total",
        "pub.orders.receipt.address",
        "pub.orders.receipt.time",
        "pub.orders.receipt.vehicle",
        "pub.orders.receipt.plate",
        "pub.order.markComplete"
      ],
      "acceptance": [
        "ordersStore.ts created with active/completed arrays, addActive, completeOrder, findById, removeAll",
        "Orders tab visible in public layout with icon and testID",
        "Orders screen shows SectionList with Active (newest first) and Completed (newest first)",
        "Active orders navigate to progress screen (confirm.tsx); completed navigate to receipt",
        "Receipt screen displays service, total, address, time, vehicle/plate, completed timestamp",
        "Confirm Order button creates PublicOrder, calls addActive, resets checkout via clearOrder()",
        "Mark complete button moves order from active → completed with completedAt timestamp",
        "Empty states show friendly copy"
      ],
      "evidence": {
        "commits": []
      },
      "notes": "Full orders flow for public user journey; includes store persistence, navigation, and checkout reset"
    },
    {
      "id": "t-035",
      "title": "Pre-auth hardening (persistence, empty states, analytics)",
      "status": "done",
      "priority": "P1",
      "area": "public",
      "owner": "@anouar.alh",
      "routes": [
        "/(public)/orders",
        "/(public)/orders/[id]",
        "/(public)/price"
      ],
      "files": [
        "lib/public/checkoutStore.ts",
        "lib/public/ordersStore.ts",
        "app/(public)/orders.tsx",
        "app/(public)/orders/[id].tsx",
        "app/(public)/price.tsx",
        "utils/analytics.ts"
      ],
      "testIDs": [
        "pub.orders.empty-active",
        "pub.orders.empty-completed",
        "pub.orders.receipt.notfound",
        "tid.public.price.confirm",
        "pub.orders.resume-<id>",
        "pub.orders.receipt-<id>",
        "pub.order.markComplete",
        "pub.orders.seed"
      ],
      "acceptance": [
        "Persist checkoutStore & ordersStore via AsyncStorage with keys cllino.checkout.v1/cllino.orders.v1",
        "Show empty states with listed testIDs",
        "Receipt not-found state when id missing",
        "logInteraction fires on confirm/resume/receipt/markComplete",
        "Deep linking support for orders/[id] route",
        "Dev seed button for demo orders (__DEV__ only)"
      ],
      "evidence": {
        "commits": []
      },
      "notes": "Public flow now resilient without auth with persistent stores, proper empty states, deep linking, analytics tracking, and dev seeding"
    },
    {
      "id": "t-036",
      "title": "Address Picker V2 (modal, search, map, wiring)",
      "status": "done",
      "priority": "P1",
      "area": "public",
      "owner": "@anouar.alh",
      "routes": ["/(public)/address/select", "/(public)/address/map"],
      "files": [
        "app/(public)/address/select.tsx",
        "app/(public)/address/map.tsx",
        "components/public/AddressSearchBar.tsx",
        "components/public/AddressRow.tsx",
        "components/public/ListSection.tsx",
        "utils/geocode.ts"
      ],
      "testIDs": [
        "address.modal.search",
        "address.modal.clear",
        "address.modal.useLocation",
        "address.modal.chooseOnMap",
        "address.modal.saved-<slug>",
        "address.modal.addNew",
        "address.modal.recent-<id>",
        "address.modal.loading",
        "address.modal.empty",
        "address.modal.permissionDenied",
        "address.modal.dismiss",
        "address.map.pin",
        "address.map.confirm"
      ],
      "acceptance": [
        "Select sets checkoutStore.address and dismisses/navigates back",
        "Permission denied shows inline state with settings CTA",
        "Map confirm writes formatted address and returns",
        "Debounced search results with loading/empty states",
        "All touch targets ≥44dp and safe-area respected"
      ],
      "evidence": {
        "commits": []
      },
      "notes": "Polished address selection with search, current location, map picker, saved addresses; wired to checkoutStore.address with graceful fallbacks and permission handling"
    }
  ]
}
